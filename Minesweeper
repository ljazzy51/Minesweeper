import random


def GenerateMineSweeperMap(n, k):
    arr = [[0 for row in range(n)] for column in range(n)]
    for num in range(k):
        x = random.randint(0, n - 1)
        y = random.randint(0, n - 1)
        arr[y][x] = 'X'

        # sectioning the board into segments in order to place bombs
        # creates the board when 'arr' is returned

        if (0 <= x <= n - 2) and (0 <= y <= n - 1):
            if arr[y][x + 1] != 'X':
                arr[y][x + 1] += 1  # center right
        if (1 <= x <= n - 1) and (0 <= y <= n - 1):
            if arr[y][x - 1] != 'X':
                arr[y][x - 1] += 1  # center left
        if (1 <= x <= n - 1) and (1 <= y <= n - 1):
            if arr[y - 1][x - 1] != 'X':
                arr[y - 1][x - 1] += 1  # top left

        if (0 <= x <= n - 2) and (1 <= y <= n - 1):
            if arr[y - 1][x + 1] != 'X':
                arr[y - 1][x + 1] += 1  # top right
        if (0 <= x <= n - 1) and (1 <= y <= n - 1):
            if arr[y - 1][x] != 'X':
                arr[y - 1][x] += 1  # top center
        if (0 <= x <= n - 2) and (0 <= y <= n - 2):
            if arr[y + 1][x + 1] != 'X':
                arr[y + 1][x + 1] += 1  # bottom right
        if (1 <= x <= n - 1) and (0 <= y <= n - 2):
            if arr[y + 1][x - 1] != 'X':
                arr[y + 1][x - 1] += 1  # bottom left
        if (0 <= x <= n - 1) and (0 <= y <= n - 2):
            if arr[y + 1][x] != 'X':
                arr[y + 1][x] += 1  # bottom center
    return arr

# generates the player interface

def GeneratePlayerMap(n):
    arr = [['-' for row in range(n)] for column in range(n)]
    return arr

# generates the board that the player sees

def DisplayMap(map):
    for row in map:
        print(" ".join(str(cell) for cell in row))
        print("")

# checking to see if the placed marker is an open spot on the board
# this checks for if the player placed a marker there already or if a bomb is there

def CheckWon(map):
    for row in map:
        for cell in row:
            if cell == '-':
                return False
    return True

# prints the user's score as well as asking them if them if they would like to play again

def CheckContinueGame(score):
    print("Your score: ", score)
    isContinue = input("Do you want to try again? (y/n) :")
    if isContinue == 'n':
        return False
    return True

# defines how many rows the board has and how many bombs are randomly placed upon the board

def Game():
    GameStatus = True
    while GameStatus:
        difficulty = input("Select your difficulty (b, i, h):")
        if difficulty.lower() == 'b':
            n = 5 # rows
            k = 3 # bombs
        elif difficulty.lower() == 'i':
            n = 6 # rows
            k = 8 # bombs
        else:
            n = 8 # rows
            k = 20 # bombs

        minesweeper_map = GenerateMineSweeperMap(n, k)
        player_map = GeneratePlayerMap(n)
        score = 0
        while True:
            if CheckWon(player_map) == False:
                print("Enter your cell you want to open :")
                x = input("X (1 to 5) :")
                y = input("Y (1 to 5) :")
                x = int(x) - 1  # 0 based indexing
                y = int(y) - 1  # 0 based indexing
                if (minesweeper_map[y][x] == 'X'):
                    print("Game Over!")
                    DisplayMap(minesweeper_map)
                    GameStatus = CheckContinueGame(score)
                    break
                else:
                    player_map[y][x] = minesweeper_map[y][x]
                    DisplayMap(player_map)
                    score += 1

            else:
                DisplayMap(player_map)
                print("You have Won!")
                GameStatus = CheckContinueGame(score)
                break


# Start of Game
if __name__ == "__main__":
    try:
        Game()
    except KeyboardInterrupt:
        print('\nEnd of Game. Bye Bye!')